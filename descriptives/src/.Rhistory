sexo = first(sexo)) %>%
ungroup()
View(tasa_acum_for_lollis_sexo)
# TASA ACUMULADA (CUALQUIER ESTATUS) POR ENTIDAD + SEXO ====
tasa_acum_for_lollis_sexo <- estatus_victimas %>%
filter(sexo != "sexo_na" & year >= 2006) %>%
group_by(entidad, ent_code, sexo) %>%
summarize(n = sum(n)) %>%
mutate(ent_code = str_pad(ent_code, 2, pad = "0")) %>%
ungroup() %>%
left_join(pob_ent %>%
select(entidad, nom_ent, pobmas, pobfem) %>%
pivot_longer(cols = pobmas:pobfem, names_to = "sexo", values_to = "pob") %>%
mutate(sexo = ifelse(sexo == "pobmas", "Hombre", "Mujer")),
by = c("ent_code" = "entidad", "sexo")) %>%
mutate(
pob = as.numeric(pob),
tasa = n / pob * 100000,
sexo = case_when(
sexo == "Hombre" ~ "Hombres",
sexo == "Mujer" ~ "Mujeres"),
nom_ent = case_when(
nom_ent == "Veracruz de Ignacio de la Llave" ~ "Veracruz",
nom_ent == "Michoacán de Ocampo" ~ "Michoacán",
nom_ent == "Coahuila de Zaragoza" ~ "Coahuila",
T ~ nom_ent)) %>%
select(nom_ent, tasa, sexo) %>%
group_by(nom_ent) %>%
mutate(min_or_max = ifelse(tasa == max(tasa), "max", "min"),
# Difference between the max and min values
diff = max(tasa) - min(tasa),
# Pull value of sexo for the max value
max_sexo = first(sexo)) %>%
ungroup()
# TASA ACUMULADA (CUALQUIER ESTATUS) POR ENTIDAD + SEXO ====
tasa_acum_for_lollis_sexo <- estatus_victimas %>%
filter(sexo != "sexo_na" & year >= 2006) %>%
group_by(entidad, ent_code, sexo) %>%
summarize(n = sum(n)) %>%
mutate(ent_code = str_pad(ent_code, 2, pad = "0")) %>%
ungroup() %>%
left_join(pob_ent %>%
select(entidad, nom_ent, pobmas, pobfem) %>%
pivot_longer(cols = pobmas:pobfem, names_to = "sexo", values_to = "pob") %>%
mutate(sexo = ifelse(sexo == "pobmas", "Hombre", "Mujer")),
by = c("ent_code" = "entidad", "sexo")) %>%
mutate(
pob = as.numeric(pob),
tasa = n / pob * 100000,
sexo = case_when(
sexo == "Hombre" ~ "Hombres",
sexo == "Mujer" ~ "Mujeres"),
nom_ent = case_when(
nom_ent == "Veracruz de Ignacio de la Llave" ~ "Veracruz",
nom_ent == "Michoacán de Ocampo" ~ "Michoacán",
nom_ent == "Coahuila de Zaragoza" ~ "Coahuila",
T ~ nom_ent)) %>%
select(nom_ent, tasa, sexo) %>%
group_by(nom_ent) %>%
mutate(min_or_max = ifelse(tasa == max(tasa), "max", "min"),
# Difference between the max and min values
diff = max(tasa) - min(tasa),
# Pull value of sexo for the max value of tasa
sexo = sexo[which.max(tasa)]) %>%
ungroup()
# TASA ACUMULADA (CUALQUIER ESTATUS) POR ENTIDAD + SEXO ====
tasa_acum_for_lollis_sexo <- estatus_victimas %>%
filter(sexo != "sexo_na" & year >= 2006) %>%
group_by(entidad, ent_code, sexo) %>%
summarize(n = sum(n)) %>%
mutate(ent_code = str_pad(ent_code, 2, pad = "0")) %>%
ungroup() %>%
left_join(pob_ent %>%
select(entidad, nom_ent, pobmas, pobfem) %>%
pivot_longer(cols = pobmas:pobfem, names_to = "sexo", values_to = "pob") %>%
mutate(sexo = ifelse(sexo == "pobmas", "Hombre", "Mujer")),
by = c("ent_code" = "entidad", "sexo")) %>%
mutate(
pob = as.numeric(pob),
tasa = n / pob * 100000,
sexo = case_when(
sexo == "Hombre" ~ "Hombres",
sexo == "Mujer" ~ "Mujeres"),
nom_ent = case_when(
nom_ent == "Veracruz de Ignacio de la Llave" ~ "Veracruz",
nom_ent == "Michoacán de Ocampo" ~ "Michoacán",
nom_ent == "Coahuila de Zaragoza" ~ "Coahuila",
T ~ nom_ent)) %>%
select(nom_ent, tasa, sexo) %>%
group_by(nom_ent) %>%
mutate(min_or_max = ifelse(tasa == max(tasa), "max", "min"),
# Difference between the max and min values
diff = max(tasa) - min(tasa),
# Pull value of sexo for the max value of tasa
max_sexo = sexo[which.max(tasa)]) %>%
ungroup()
# Packages
if(!require(pacman)) install.packages("pacman")
pacman::p_load(googledrive, here, tidyverse, ggrepel, data.table, jsonlite)
# Files
paths <- list(output = here("descriptives/output/"),
tema = here("descriptives/src/tema.R"))
source(paths$tema)
drive_auth("sierra.wells@datacivica.org")
drive_in <- drive_ls(as_id("1ZCf0i2KI-_8bEngd-c4HrBAPsTm-weIO"))
# ENVIPE (empezó a medir desapariciones en 2013)
envipe_id <- drive_in %>%
filter(name %like% "envipe") %>%
pull(id)
drive_download(envipe_id,
path = paste0(tempdir(), "/envipe.csv"),
overwrite = TRUE)
envipe <- read_csv(paste0(tempdir(), "/envipe.csv"))
file.remove(paste0(tempdir(), "/envipe.csv"))
# RNPDNO
rnpdno_gen_id <- drive_in %>%
filter(name %like% "scrapeo") %>%
pull(id) %>%
drive_ls() %>%
filter(name == "general.json") %>%
pull(id)
drive_download(rnpdno_gen_id,
path = paste0(tempdir(), "/rnpdno_gen.json"),
overwrite = TRUE)
rnpdno_by_year_hom <- fromJSON(paste0(tempdir(), "/rnpdno_gen.json"))[["anual"]][["Hombre"]] %>%
as.data.frame() %>%
pivot_longer(cols = everything(), names_to = "year", values_to = "count") %>%
mutate(year = as.numeric(str_remove(year, "X")),
sexo = "hombre")
rnpdno_by_year_muj <- fromJSON(paste0(tempdir(), "/rnpdno_gen.json"))[["anual"]][["Mujer"]] %>%
as.data.frame() %>%
pivot_longer(cols = everything(), names_to = "year", values_to = "count") %>%
mutate(year = as.numeric(str_remove(year, "X")),
sexo = "mujer")
rnpdno_by_year_ind <- fromJSON(paste0(tempdir(), "/rnpdno_gen.json"))[["anual"]][["Indeterminado"]] %>%
as.data.frame() %>%
pivot_longer(cols = everything(), names_to = "year", values_to = "count") %>%
mutate(year = as.numeric(str_remove(year, "X")),
sexo = NA_character_)
rnpdno_by_year <- bind_rows(rnpdno_by_year_hom, rnpdno_by_year_muj, rnpdno_by_year_ind)
file.remove(paste0(tempdir(), "/rnpdno_gen.json"))
# Graph prep ====
caption_ambos <- "Fuente: Elaboración propia a partir de la ENVIPE 2013-2023 y del RNPDNO"
# Totales según cada fuente
rndpno_for_graf <- rnpdno_by_year %>%
filter(year %in% envipe$year) %>%
group_by(year) %>%
summarise(total_anual = sum(count))
View(rndpno_for_graf)
# ¿Cuántas veces más desapariciones estima la ENVIPE que el RNPDNO?
diff_veces_envipe_rnpdno <- envipe %>%
rename(total_envipe = total_anual) %>%
left_join(rndpno_for_graf %>%
rename(total_rnpdno = total_anual), by = "year") %>%
mutate(veces = round(total_envipe / total_rnpdno, 1))
View(diff_veces_envipe_rnpdno)
tasa_acum_lollis_sexo <- ggplot(tasa_acum_for_lollis_sexo,
aes(x = tasa, y = reorder(nom_ent, tasa), color = sexo)) +
geom_line(aes(group = nom_ent), color = gray_dark) +
geom_point(size = 8) +
geom_text(aes(label = round(tasa, 0)),
family = font_serif_bold,
nudge_x = ifelse(tasa_acum_for_lollis_sexo$min_or_max == "max", 40, -40)) +
labs(title = "Por cada 100,000 habitantes, ¿cuántas personas desaparecidas\nse registraron entre 2006 y 2024?",
subtitle = "Se incluyen tanto personas localizadas como personas sin localizar",
x = "Personas desaparecidas por cada 100,000 habitantes", y = "", color = "",
caption = caption) +
scale_color_manual(values = pal) +
tema +
theme(legend.position = "top") +
guides(color = guide_legend(reverse = TRUE))
for (device in devices) {
ggsave(filename = paste0(paths$output, "tasa_acum_ent_lollis_sexo", device),
plot = tasa_acum_lollis_sexo, width = 10, height = 10)
}
# ÍNDICE DE VARS REPORTED POR AUTORIDAD ====
vars_to_analyze_autoridad <- c(
"any_enfoque_diferenciado_reported",
"hechos_fecha_y_hora_de_hechos",
"datos_generales_edad_en_anos",
"medios_de_contacto_telefono_o_correo_electronico")
autoridades_w_indices <- rnpdno_clean %>%
filter(!is.na(autoridad_tipo) & !is.na(autoridad_ent)) %>%
group_by(autoridad_tipo, autoridad_ent) %>%
reframe(
n_registros = length(unique(id)),
across(.cols = vars_to_analyze_autoridad,
.fns = ~ mean(!is.na(.x)))) %>%
ungroup() %>%
mutate(
# Create índice which is mean of vars_to_analyze_autoridad
indice = rowMeans(select(., all_of(vars_to_analyze_autoridad))))
#
# Author: SW
# Maintainer(s): SW, AF, PB, IS
# License:  Data Cívica 2024 ©
# ---------------------------------------------
# TODO
# Packages
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, here, googledrive, svglite, showtext)
# Paths
paths <- list(output = here("descriptives/output/"),
tema = here("descriptives/src/tema.R"))
# Tema
source(paths$tema)
# READ ====
drive_auth("sierra.wells@datacivica.org")
drive_in <- drive_ls(as_id("1u80_4_-ySSqtKmSAnblPh5HNHHvi1V6P")) %>%
filter(name %in% c("t_dgrales_pdes_loc.rds", "t_pdes_enfoque_diferenciado.rds",
"t_pdes_hechos.rds", "t_medios_contacto_prep.rds"))
for (file in drive_in$name) {
file_path <- paste0(tempdir(), "/", file)
drive_download(file, path = file_path, overwrite = T)
tempo <- readRDS(file_path)
assign(str_remove(file, ".rds"), tempo)
file.remove(file_path)
}
rm(tempo)
# JOIN ====
join_vars <- c("id", "id_reg", "id_per", "autoridad")
rnpdno_joined <- t_dgrales_pdes_loc %>%
left_join(t_pdes_enfoque_diferenciado, by = join_vars, relationship = "many-to-many") %>%
left_join(t_pdes_hechos, by = join_vars, relationship = "many-to-many") %>%
left_join(t_medios_contacto_prep, by = join_vars, relationship = "many-to-many") %>%
select(-starts_with("info"))
# CLEAN ====
rnpdno_clean <- rnpdno_joined %>%
mutate(
# Replace "SIN DATO" or "SE DESCONOCE" with NA
across(everything(), ~ ifelse(.x == "SIN DATO" | .x == "SE DESCONOCE", NA_character_, .))) %>%
mutate(
# Are there any enfoque diferenciado vars that are non-NA?
any_enfoque_diferenciado_reported = ifelse(
rowSums(!is.na(select(., starts_with("enfoque_diferenciado_")))) > 0, T, NA),
# Registro = confidencializado si nombre es eliminado
registro_confidencial = case_when(
datos_generales_nombre == "ELIMINADO-9" ~ T,
datos_generales_primer_apellido == "ELIMINADO-10" ~ T,
T ~ F),
year_hechos =
ifelse(
# If hechos_1_fecha_y_hora_de_hechos is not NA and does not contain "ELIMINADO", then extract year
!is.na(hechos_1_fecha_y_hora_de_hechos) & !str_detect(hechos_1_fecha_y_hora_de_hechos, "ELIMINADO"),
as.numeric(substr(hechos_1_fecha_y_hora_de_hechos, 7, 10)), NA_real_),
autoridad_tipo = case_when(
startsWith(autoridad, "COMISION") ~ "comision",
str_detect(autoridad, "^FISCALIA|^PROCURADURIA") ~ "fiscalia",
T ~ NA_character_),
autoridad_ent =
case_when(
autoridad == "FISCALIA GENERAL DE LA REPUBLICA" ~ "FGR (federal)",
autoridad == "COMISION NACIONAL DE BUSQUEDA DE PERSONAS" ~ "CNB (nacional)",
str_detect(autoridad, "AGUASCALIENTES") ~ "Aguascalientes",
str_detect(autoridad, "BAJA CALIFORNIA SUR") ~ "Baja California Sur",
str_detect(autoridad, "BAJA CALIFORNIA") ~ "Baja California",
str_detect(autoridad, "CAMPECHE") ~ "Campeche",
str_detect(autoridad, "CHIAPAS") ~ "Chiapas",
str_detect(autoridad, "CHIHUAHUA") ~ "Chihuahua",
str_detect(autoridad, "CIUDAD DE MEXICO") ~ "CDMX",
str_detect(autoridad, "COAHUILA") ~ "Coahuila",
str_detect(autoridad, "COLIMA") ~ "Colima",
str_detect(autoridad, "DURANGO") ~ "Durango",
str_detect(autoridad, "ESTADO DE MEXICO") ~ "Estado de México",
str_detect(autoridad, "GUANAJUATO") ~ "Guanajuato",
str_detect(autoridad, "GUERRERO") ~ "Guerrero",
str_detect(autoridad, "HIDALGO") ~ "Hidalgo",
str_detect(autoridad, "JALISCO") ~ "Jalisco",
str_detect(autoridad, "MICHOACAN") ~ "Michoacán",
str_detect(autoridad, "MORELOS") ~ "Morelos",
str_detect(autoridad, "NAYARIT") ~ "Nayarit",
str_detect(autoridad, "NUEVO LEON") ~ "Nuevo León",
str_detect(autoridad, "OAXACA") ~ "Oaxaca",
str_detect(autoridad, "PUEBLA") ~ "Puebla",
str_detect(autoridad, "QUERETARO") ~ "Querétaro",
str_detect(autoridad, "QUINTANA ROO") ~ "Quintana Roo",
str_detect(autoridad, "SAN LUIS POTOSI") ~ "San Luis Potosí",
str_detect(autoridad, "SINALOA") ~ "Sinaloa",
str_detect(autoridad, "SONORA") ~ "Sonora",
str_detect(autoridad, "TABASCO") ~ "Tabasco",
str_detect(autoridad, "TAMAULIPAS") ~ "Tamaulipas",
str_detect(autoridad, "TLAXCALA") ~ "Tlaxcala",
str_detect(autoridad, "VERACRUZ") ~ "Veracruz",
str_detect(autoridad, "YUCATAN") ~ "Yucatán",
str_detect(autoridad, "ZACATECAS") ~ "Zacatecas",
T ~ NA_character_)) %>%
filter(year_hechos >= 2012) # Solo incluir registros de 2012 en adelante
# Estandarizar nombres de variables
names(rnpdno_clean) <- names(rnpdno_clean) %>%
ifelse(str_detect(., "^hechos_|^enfoque_diferenciado_|^medios_de_contacto_"),
str_replace(., "_1_", "_"), .)
# WHAT % OF VARS OF INTEREST ARE REPORTED? ====
vars_to_analyze <- c(
"datos_generales_sexo" = "Sexo",
"datos_generales_estado_civil" = "Estado civil",
"datos_generales_nacionalidad" = "Nacionalidad",
"datos_generales_edad_en_anos" = "Edad",
"datos_generales_escolaridad" = "Escolaridad",
"datos_generales_habla_espanol" = "¿Habla español?",
"medios_de_contacto_telefono_o_correo_electronico" = "Medio de contacto",
"enfoque_diferenciado_presenta_alguna_condicion_de_discapacidad" = "¿Tiene alguna discapacidad?",
"enfoque_diferenciado_pueblo_o_comunidad_indigena" = "¿Pertenece a alguna comunidad indígena?",
"enfoque_diferenciado_idioma_o_lengua_indigena" = "¿Habla alguna lengua indígena?",
"enfoque_diferenciado_religion" = "Religión",
"enfoque_diferenciado_es_persona_extranjera_en_mexico" = "¿Es extranjere?",
"enfoque_diferenciado_es_periodista" = "¿Es periodista?",
"enfoque_diferenciado_es_defensor_de_derechos_humanos" = "¿Es defensor de DD.HH.?",
"enfoque_diferenciado_es_servidor_publico" = "¿Es servidor público?",
"enfoque_diferenciado_pertenece_a_algun_sindicato" = "¿Pertenece a algún sindicato?",
"enfoque_diferenciado_pertenece_a_la_comunidad_lgbttti_lesbico_gays_bisexuales_transgeneros_trasvestis_transexuales_e_intersexuales" = "¿Pertenece a la comunidad LGBT?",
"enfoque_diferenciado_pertenece_a_alguna_ong_organizacion_no_gubernamental" = "¿Pertenece a alguna ONG?")
perc_reported_vars_df <- data.frame()
for (name in names(vars_to_analyze)) {
tempo <- rnpdno_clean %>%
summarize(perc_reported = round(mean(!is.na(!!sym(name))), 3)) %>%
mutate(var = name) %>%
relocate(var)
perc_reported_vars_df <- bind_rows(perc_reported_vars_df, tempo)
}
perc_reported_vars_df <- perc_reported_vars_df %>%
mutate(var_desc = vars_to_analyze[var])
perc_reported_vars_lolli <- ggplot(perc_reported_vars_df,
aes(x = perc_reported,
y = reorder(str_wrap(var_desc, 25), perc_reported))) +
geom_segment(aes(xend = 0, yend = reorder(str_wrap(var_desc, 25), perc_reported)),
color = "#272628") +
geom_point(size = 10, color = pal[2]) +
geom_text(aes(label = paste0(as.character(round(100 * perc_reported, 0)), "%")),
size = 3, color = "white", family = font_serif_bold) +
labs(title = "Porcentaje de registros de personas desaparecidas que cuentan con las siguientes variables relleanadas",
subtitle = "Para registros de 2012 en adelante", y = "Variable", x = "",
caption = paste0("Fuente: Elaboración propia con la versión pública del RNPDNO en formato JSON, actualizado el 5 de agosto de 2023"), x = "", y = "") +
tema +
theme(legend.position = "none",
axis.ticks.x = element_blank(),
axis.text.x = element_blank())
for (device in devices){
ggsave(filename = paste0(paths$output, "rnpdno_vars_lolli", device),
plot = perc_reported_vars_lolli, width = 12, height = 8, dpi = 300)
}
# ÍNDICE DE VARS REPORTED POR AUTORIDAD ====
vars_to_analyze_autoridad <- c(
"any_enfoque_diferenciado_reported",
"hechos_fecha_y_hora_de_hechos",
"datos_generales_edad_en_anos",
"medios_de_contacto_telefono_o_correo_electronico")
autoridades_w_indices <- rnpdno_clean %>%
filter(!is.na(autoridad_tipo) & !is.na(autoridad_ent)) %>%
group_by(autoridad_tipo, autoridad_ent) %>%
reframe(
n_registros = length(unique(id)),
across(.cols = vars_to_analyze_autoridad,
.fns = ~ mean(!is.na(.x)))) %>%
ungroup() %>%
mutate(
# Create índice which is mean of vars_to_analyze_autoridad
indice = rowMeans(select(., all_of(vars_to_analyze_autoridad))))
View(autoridades_w_indices)
test <- autoridades_w_indices %>% group_by(autoridad_tipo) %>% summarize(indice = mean(indice))
View(test)
indices_comision <- autoridades_w_indices %>%
filter(autoridad_tipo == "comision") %>%
mutate(
autoridad_ent_label = ifelse(
# If indice is max for that autoridad_tipo, then add [n registros] to label
indice == max(indice),
paste0(autoridad_ent, "\n[", n_registros, " registros]"),
paste0(autoridad_ent, " [", n_registros, "]")),
autoridad_ent_label = fct_reorder(autoridad_ent_label, indice))
lolli_comis_ent_indices <- ggplot(indices_comision,
aes(x = indice, y = autoridad_ent_label)) +
geom_segment(aes(xend = 0, yend = autoridad_ent_label), color = "#272628") +
geom_point(size = 10, color = pal[2]) +
geom_text(aes(label = round(indice, 2)),
size = 3, color = "white", family = font_serif_bold) +
labs(title = "¿Qué comisiones de búsqueda tienen los registros de personas desaparecidas más completos?",
subtitle = paste0("Índice de completitud de registro es el promedio del % de registros que reportan:",
"\nMedio de contacto, edad, fecha y hora de los hechos y cualquier variable de enfoque diferenciado*"),
caption = paste0("Fuente: Elaboración por Data Cívica con la versión pública del RNPDNO en formato JSON, actualizado el 5 de agosto de 2023",
"\n*Las variables de 'enfoque diferenciado' documentan pertenencia a grupos vulnerables (periodistas, personas indígenas,\ndefensores de DD.HH., etc.)"),
x = "Índice de completitud de registro", y = "(Menos completos --> más completos)") +
expand_limits(y= c(0, length(unique(indices_comision$autoridad_ent_label)) + 1)) +
tema +
theme(legend.position = "none")
for (device in devices){
ggsave(filename = paste0(paths$output, "rnpdno_vars_comis_lolli", device),
plot = lolli_comis_ent_indices, width = 12, height = 10)
}
#
# Author: SW
# Maintainer(s): SW, AF, PB, IS
# License:  Data Cívica 2024 ©
# ---------------------------------------------
# TODO
# Packages
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, here, googledrive, svglite, jsonlite, mxmaps,
ggrepel, varhandle, data.table)
# Files
paths <- list(output = here("descriptives/output/"),
tema = here("descriptives/src/tema.R"))
source(paths$tema)
# READ ====
drive_auth("sierra.wells@datacivica.org")
motha_drive <- drive_ls(as_id("1F7nl00R48u_iXEDVVvqtcbfF9t8UfJbU"))
data(mxhexbin.map)
# ESTATUS VÍCTIMAS BY ENTIDAD
estatus_victimas_id <- motha_drive %>%
filter(name == "ents_by_year_status.csv") %>%
pull(id)
drive_download(as_id(estatus_victimas_id),
path = paste0(tempdir(), "/ents_by_year_status.csv"),
overwrite = TRUE)
estatus_victimas <- read_csv(paste0(tempdir(), "/ents_by_year_status.csv"))
file.remove(paste0(tempdir(), "/ents_by_year_status.csv"))
# POBLACIÓN POR ENTIDAD
pob_id <- drive_ls(as_id("1ZCf0i2KI-_8bEngd-c4HrBAPsTm-weIO")) %>%
filter(name %like% "pob") %>%
pull(id)
stopifnot(length(pob_id) == 1)
drive_download(as_id(pob_id),
path = paste0(tempdir(), "/pob.csv"),
overwrite = TRUE)
pob_ent <- read_csv(paste0(tempdir(), "/pob.csv")) %>%
filter(nivel == "entidad") %>%
select(entidad, nom_ent, pobtot, pobfem, pobmas)
file.remove(paste0(tempdir(), "/pob.csv"))
View(pob_ent)
test <- estatus_victimas %>%
filter(year >= 2006) %>%
group_by(status) %>%
summarize(n = sum(n)) %>%
ungroup() %>%
mutate(total = sum(n),
perc = n / total,
status = case_when(
status == "no_local" ~ "Sin localizar",
status == "local_sv" ~ "Localizadas sin vida",
status == "local_cv" ~ "Localizadas con vida"),
nom_ent = case_when(
nom_ent == "Veracruz de Ignacio de la Llave" ~ "Veracruz",
nom_ent == "Michoacán de Ocampo" ~ "Michoacán",
nom_ent == "Coahuila de Zaragoza" ~ "Coahuila",
T ~ nom_ent))
test <- estatus_victimas %>%
filter(year >= 2006) %>%
group_by(status) %>%
summarize(n = sum(n)) %>%
ungroup() %>%
mutate(total = sum(n),
perc = n / total,
status = case_when(
status == "no_local" ~ "Sin localizar",
status == "local_sv" ~ "Localizadas sin vida",
status == "local_cv" ~ "Localizadas con vida"))
View(test)
#
# Author: SW
# Maintainer(s): SW, AF, PB, IS
# License:  Data Cívica 2024 ©
# ---------------------------------------------
# TODO
# Paquetería
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, here, ggrepel, googledrive, ggtext)
# Archivos locales
rutas <- list(
output = here("descriptives/output/"),
tema = here("descriptives/tema.R"))
source(rutas$tema)
#
# Author: SW
# Maintainer(s): SW, AF, PB
# License:  Data Cívica 2024 ©
# ---------------------------------------------
# TODO
# Packages
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, here, googledrive, svglite, jsonlite)
# Files
paths <- list(output = here("descriptives/output/"),
tema = here("descriptives/src/tema.R"))
source(paths$tema)
# READ ====
drive_auth("sierra.wells@datacivica.org")
motha_drive <- drive_ls(as_id("1F7nl00R48u_iXEDVVvqtcbfF9t8UfJbU"))
# ESTATUS VÍCTIMAS BY EDAD
estatus_victimas_id <- motha_drive %>%
filter(name == "edad_by_year_status.csv") %>%
pull(id)
drive_download(as_id(estatus_victimas_id),
path = paste0(tempdir(), "/edad_by_year_status.csv"),
overwrite = TRUE)
estatus_victimas <- read_csv(paste0(tempdir(), "/edad_by_year_status.csv")) %>%
mutate(edad_categ = factor(edad_categ,
levels = c("Menores de 10 años",
"De 10 a 19 años",
"De 20 a 29 años",
"De 30 a 44 años",
"De 45 a 59 años",
"60 años y más")))
file.remove(paste0(tempdir(), "/edad_by_year_status.csv"))
stopifnot(all(!is.na(estatus_victimas$edad_categ)),
all(c("local_cv", "local_sv", "no_local") %in% estatus_victimas$status))
# DISTRIBUCIÓN DE EDADES POR SEXO ====
dist_edad_for_barras <- estatus_victimas %>%
filter(sexo != "sexo_na" & year >= 2006) %>%
group_by(edad_categ, sexo) %>%
summarise(n = sum(n)) %>%
group_by(sexo) %>%
mutate(perc = n / sum(n))
View(dist_edad_for_barras)
